version: 2.1

orbs:
  go: circleci/go@1.7.1
  aws-cli: circleci/aws-cli@2.0.3

# The Go we test and build against
goversion: &goversion "1.19"

jobs:
  test:
    executor:
      name: go/default
      tag: *goversion
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - run: make test
      - store_test_results:
          path: ./unit-tests.xml
      - go/save-cache
  build_extension:
    executor:
      name: go/default
      tag: *goversion
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run:
          name: "Build binaries and layer content ZIPs"
          environment:
            GOOS: linux
          command: make zips
      - run:
          name: "Copy binaries and ZIPs to persist for CI workspace"
          command: |
            mkdir -p ~/artifacts
            cp -R ./artifacts/* ~/artifacts/
      - persist_to_workspace:
          root: ~/
          paths:
            - artifacts
      - store_artifacts:
          path: ~/artifacts
  publish_aws:
    docker:
      - image: cimg/go:1.19
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: "Publish extension to AWS"
          command: ./publish.sh
  publish_github:
    docker:
      - image: cibuilds/github:0.13.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Artifacts being published"
          command: |
            echo "about to publish to tag ${CIRCLE_TAG}"
            ls -l ~/artifacts/*
      - run:
          name: "GHR Draft"
          command: ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ~/artifacts/
  publish_s3:
    docker:
      - image: cimg/go:1.19
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: "Artifacts being published"
          command: |
            echo "about to publish ${CIRCLE_TAG} to S3"
            ls -l ~/artifacts/*
      - run:
          name: "S3 Release"
          command: aws s3 cp ~/artifacts s3://honeycomb-builds/honeycombio/honeycomb-lambda-extension/${CIRCLE_TAG}/ --recursive

workflows:
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - test

  build:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build_extension:
          context: Honeycomb Secrets for Public Repos
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - /pull\/.*/
                - /dependabot\/.*/
      - publish_s3:
          context: Honeycomb Secrets for Public Repos
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - test
            - build_extension
      - publish_aws:
          context: Honeycomb Secrets for Public Repos
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - test
            - build_extension
      - publish_github:
          context: Honeycomb Secrets for Public Repos
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - test
            - build_extension
